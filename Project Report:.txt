Library Management System Project Report:

A Library Management System allows user to store books, issue to student and return books to library. For this type of application we can use a GUI framework and a Database management system.
To create this application first step was to create initial interface of the app. To do this I used python built in GUI framework Tkinter. With tkinter and pillow library first I initialized the background and the tabs that were necessary to link other scripts for the application. The main script for the app is app.py and other supported scripts are AddBook.py, DeleteBook.py, ViewBooks.py, IssueBook.py and ReturnBook.py. All of these script's main goal is to interact with database system. To store data for handling operation I used python built in light weight database system  Sqlite3. If there is no database file the app will create a dabase systen in its initialization. After that I made sure that it will not overide the existing file by using try and except for handling exception. I used python app.py script for connecting with database and created three tables- books, issuedbooks and returned books.With sqlite system being enabled user will be able to add, delete, read, issue and update entries. For example if user issues a book to a student then the status of that book will be changed from available to issued and if student submits the book the library the book will be available again. And also user will be able to delete a book from the database by using book id number. I used messagebox class importing from tkinter that made sure user will be notified when doing any operation. Everything that CURD needs to have has been provided in this application.
